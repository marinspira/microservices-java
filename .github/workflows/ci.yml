name: CI/CD Microservices to Azure

permissions:
  id-token: write
  contents: read

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: user-service
            docker_image: marinspira/user-service
            port: 8080
          - name: product-service
            docker_image: marinspira/product-service
            port: 8081
    env:
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Build JAR (${{ matrix.name }})
        working-directory: ${{ matrix.name }}
        run: mvn clean package -DskipTests

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        working-directory: ${{ matrix.name }}
        run: |
          docker build -t ${{ matrix.docker_image }}:latest .

      - name: Push Docker image
        run: docker push ${{ matrix.docker_image }}:latest

  deploy-to-azure:
    name: Deploy to Azure Container Apps
    runs-on: ubuntu-latest
    needs: build-and-push
    strategy:
      matrix:
        include:
          - app_name: user-service
            docker_image: marinspira/user-service
            port: 8080
          - app_name: product-service
            docker_image: marinspira/product-service
            port: 8081
    env:
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Update ingress for ${{ matrix.app_name }}
        run: |
          az containerapp ingress update \
            --name ${{ matrix.app_name }} \
            --resource-group microservices-rg \
            --target-port ${{ matrix.port }}

      - name: Deploy ${{ matrix.app_name }}
        run: |
          az containerapp update \
            --name ${{ matrix.app_name }} \
            --resource-group microservices-rg \
            --image ${{ matrix.docker_image }}:latest \
            --cpu 0.25 \
            --memory 0.5Gi